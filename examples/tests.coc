define contextmixing =
(\f:{\T:*.T->T}.

 (\T:*.
  (\x:T.

   (\g:T->T. // We need to compare this type
    g x
   )
   (f T) // To this type... but this type comes from a higher context

  )
 )

 )
(\A:*.
 (\x:A.
  x
 )
 );

define idtype = {\A:*.A->A};

define id =
(\A:*.(\a:A.a));

define idid =
id idtype id;

define deftest =
id idtype idid idtype id idtype idid;

define welltypedpolymorphism =
(\X:*.
 (\x:X.
  (\f:(\A:*.A->A) X.
   f x
  ))
 );
