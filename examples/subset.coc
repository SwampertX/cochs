// See inter.coc

// We want to prove some higher order theorems.
// So what we want to show is that the intersection of a propclass
// is a subset of any proposition in the propclass.
// To do that we need a `subset` prop with type
// (A -> *) -> (A -> *) -> *
// such that (subset A0 prop1 prop2) is inhabited
// iff every term that satisfies prop1 satisfies prop2.

// In the future,
// what we want to show is that
// // Forall props which are in propclass
// (\prop:{\_:A.*}.(\propisinpropclass:(propclass prop).
//   // inter propclass is a subset of prop.
//   (subset A0 (inter A0 propclass) prop)
// ))

// subset =
(\A0:*.

(\prop1:A0->*.
(\prop2:A0->*.

// We want to output a type which is inhabited
// iff prop1 is a subset of prop2

// Forall proofs that prop1 is true, prop2 is true
{\testproof:A0.
((prop1 testproof)->(prop2 testproof))
}

)
)

)
