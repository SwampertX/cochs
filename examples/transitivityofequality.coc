define equality =
(\type:*.(\obj1:type.(\obj2:type.
{\z:type->*.((z obj1)->(z obj2))}
)));

define transitivityofequality =
{\A:*.
{\a:A.
{\b:A.
{\c:A.

{\_:(equality A a b).
{\_:(equality A b c).
	(equality A a c)
}
}

}
}
}
};

define transitivity =
(\A:*.
(\a:A.
(\b:A.
(\c:A.

(\proofthataequalb:(equality A a b).
(\proofthatbequalc:(equality A b c).

// We want to output something of type
//    (equality A a c)
// aka
//    {\z:A->*.((z a)->(z c))}

(\z:A->*.
(\p:(z a).
// So this should be of type (z c)
(proofthatbequalc z (proofthataequalb z p))
)
)

)
)

)
)
)
);

(\p:transitivityofequality.p) transitivity
