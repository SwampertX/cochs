// see inter.coc and subset.coc

define inter =
(\A0:*.(\propclass:(A0->*)->*.(\term:A0.
{\P:A0->*.{\arbitraryprop:(propclass P).
(P term)
}}
)));

define subset =
(\A0:*.(\prop1:A0->*.(\prop2:A0->*.
{\testproof:A0.((prop1 testproof)->(prop2 testproof))
}
)));

// The following term has type
// {\A0:*.
// {\propclass:(A0->*)->*.
// {\prop:A0->*.
// {\_:(propclass prop).
// (subset A0 (inter A0 propclass) prop)
// }}}}

// i.e. it proves that for any propclass,
// and any prop,
// if prop is in propclass,
// then the intersection of propclass will be a subset of prop.

define interissubset =
{\A0:*.
{\propclass:(A0->*)->*.
{\prop:A0->*.
{\proofthatpropisinpropclass:(propclass prop).

(subset A0 (inter A0 propclass) prop)

}}}};

define proofinterissubset =
(\A0:*.
(\propclass:(A0->*)->*.

(\prop:A0->*.
(\proofthatpropisinpropclass:(propclass prop).

(\term:A0.

// This would be the code but we need to inline inter.
//     (\proofthattermsatisfiesprop1:(inter A0 propclass term).
//         proofthattermsatisfiesprop1 prop proofthatpropisinpropclass
//     )

(\proofthattermsatisfiesprop1:(inter A0 propclass term).
    proofthattermsatisfiesprop1 prop proofthatpropisinpropclass
)

)

)
)

)
);

(\p:interissubset.p) proofinterissubset

