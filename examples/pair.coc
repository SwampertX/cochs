import "equality.coc" { equality reflexivity }

define pair =
(\A:*.
 (\B:*.
  (\a:A.
   (\b:B.
    (\C:*.
     (\f:A->B->C.f a b))))));

define PairOf =
(\LeftT:*.
 (\RightT:*.{\C:*.
             (LeftT->RightT->C)->C}));

define head =
(\A:*.
 (\B:*.
  (\p:(PairOf A B).
   p A (\a:A.(\b:B.a)))));

define tail =
(\A:*.
 (\B:*.
  (\p:(PairOf A B).
   p B (\a:A.(\b:B.b)))));

define headpairxyeqx =
(\A:*.
 (\B:*.
  (\a:A.
   (\b:B.
    (\typecheck:(equality A (head A B (pair A B a b)) a).typecheck)
    (reflexivity A (head A B (pair A B a b)))))));

define tailpairxyeqy =
(\A:*.
 (\B:*.
  (\a:A.
   (\b:B.
    (\typecheck:(equality B (tail A B (pair A B a b)) b).typecheck)
    (reflexivity B (tail A B (pair A B a b)))))));

define headpair =
(\A:*.
 (\B:*.
  (\a:A.
   (\b:B.
    head A B (pair A B a b)))));
