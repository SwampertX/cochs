// see inter.coc and subset.coc

// The following term has type
// {\A0:*.
// {\propclass:{\prop:{\_:A0.*}.*}.
// {\prop:{\_:A0.*}.
// {\_:(propclass prop).
// (subset A0 (inter A0 propclass) prop)
// }}}}

// i.e. it proves that for any propclass,
// and any prop,
// if prop is in propclass,
// then the intersection of propclass will be a subset of prop.

(\A0:*.
(\propclass:{\prop:{\_:A0.*}.*}.

(\prop:{\_:A0.*}.
(\proofthatpropisinpropclass:(propclass prop).

(\term:A0.

// This would be the code but we need to inline inter.
//     (\proofthattermsatisfiesprop1:(inter A0 propclass term).
//         proofthattermsatisfiesprop1 prop proofthatpropisinpropclass
//     )

(\proofthattermsatisfiesprop1:(
		// inter =
		(\A0:*.

		(\propclass:{\proposition:{\_:A0.*}.*}.
		(\term:A0.

		// This is the type we want to be inhabited
		// iff term satisfies the proposition (inter propclass),
		// which means we want this type to be inhabited
		// iff forall P,
		//   (P satisfies propclass) => (term satisfies P).

		// Here's the forall P,
		{\P:{\_:A0.*}.

		// if P is in propclass
		{\arbitraryprop:(propclass P).

		// then term satisfies P
		(P term)

		}
		}

		)
		)

		)

		A0 propclass term).
    proofthattermsatisfiesprop1 prop proofthatpropisinpropclass
)

)

)
)

)
)
