import "examples/lem.coc" {neg}
import "examples/equality.coc" {equality}
import "examples/Util.coc" {the}

/* {\em: {\A:*.{\B:*.(A->B)->(({C:*.A->C})->B)->B}}. */
define oneisnat =
{\T:*.
 {\z:T.
 {\o:T.
 {\isnat:T->*.
 {\succ:T->T.
  {\zeroisnat:isnat z.
  {\succisnat: {\n:T.(isnat n) -> isnat (succ n)}.
  {\zeronotsucc: {\n:T.(isnat n) -> neg (equality T z (succ n))}.
  {\succequalthenequal: {\n:T.{\m:T.(isnat n) -> (isnat m) ->
                                    (equality T (succ n) (succ m)) ->
                                    (equality T n m)}}.
  {\induction: {\n:T.(isnat n) -> {\P:T -> *. (P z) ->
                    {\k: T. (isnat k) -> (P k) -> (P (succ k))} -> P n}}.
  {\oneissucczero: equality T (succ z) o.
    isnat o}}}}}}}}}}};

/* (\em: {\A:*.{\B:*.  (A->B)->(({C:*.A->C})->B)->B}}. */
define proofthatoneisnat =
the oneisnat
(\T:*.
 (\z:T.
 (\o:T.
 (\isnat:T->*.
 (\succ:T->T.
  (\zeroisnat:isnat z.
  (\succisnat: {\n:T.(isnat n) -> isnat (succ n)}.
  (\zeronotsucc: {\n:T.(isnat n) -> neg (equality T z (succ n))}.
  (\succequalthenequal: {\n:T.{\m:T.(isnat n) -> (isnat m) ->
                                    (equality T (succ n) (succ m)) ->
                                    (equality T n m)}}.
  (\induction: {\n:T.(isnat n) -> {\P:T -> *. (P z) ->
                    {\k: T. (isnat k) -> (P k) -> (P (succ k))} -> P n}}.
  (\oneissucczero: equality T (succ z) o.
    isnat (succ z))))))))))));
